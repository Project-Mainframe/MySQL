name: Build and Deploy Docker Image

on:
  push:
    branches: [ main ]

env:
  DB: ${{ secrets.DB }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and save Docker image
        run: |
          docker build -t $IMAGE_NAME \
            --build-arg DB=$DB \
            --build-arg DB_USER=$DB_USER \
            --build-arg DB_PASSWORD=$DB_PASSWORD \
            .
          docker save $IMAGE_NAME > "${IMAGE_NAME}.tar"
      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: $IMAGE_NAME
          path: "${IMAGE_NAME}.tar"

      - name: Copy Docker Image to Server
        uses: appleboy/scp-action@master
        with:
          host: $SSH_HOST
          username: $SSH_USER
          key: $SSH_PRIVATE_KEY
          source: "${IMAGE_NAME}.tar"
          target: /root/containers/

      - name: Start new container using the new image
        uses: appleboy/ssh-action@master
        with:
          host: $SSH_HOST
          username: $SSH_USER
          key: $SSH_PRIVATE_KEY
          script: |
            docker stop $IMAGE_NAME
            docker rm $IMAGE_NAME
            docker load < "/root/containers/${IMAGE_NAME}.tar"
            docker run -d --name $IMAGE_NAME -p 3306:3306 -v mysql:/var/lib/mysql $IMAGE_NAME
            exit
